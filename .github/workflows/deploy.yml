name: Deploy

on:
  workflow_dispatch:
 # workflow_run:
 #   branches: [main]
 #   workflows: [Build-Test]
 #   types:
 #     - completed


env:
  CUO_ASSEMBLY_VERSION: '0.1.11.${{ github.run_number }}'
  CUO_OUTPUT_PATH: '../../bin/dist'
  CUO_PROJECT_PATH: "src/ClassicUO.Client/ClassicUO.Client.csproj"
  CUO_ZIP_NAME: "ClassicUO-dev-preview-release.zip"

  DOTNET_NOLOGO: false
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip

jobs:
  build:
    #if: ${{ github.event.workflow_run.conclusion == 'success' }} && "${{ env.GITHUB_REPOSITORY }}" == 'ClassicUO/ClassicUO'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
       os: [ ubuntu-latest ]

    steps:
    - uses: actions/checkout@v2
      
    - name: Get submodules
      run: |
        git config --global url."https://".insteadOf git://
        git submodule update --init --recursive
        
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        include-prerelease: true
            
    - name: Build
      run: dotnet publish ${{ env.CUO_PROJECT_PATH }} -c Release -o ${{ env.CUO_OUTPUT_PATH }} -p:IS_DEV_BUILD=true -p:AssemblyVersion=${{ env.CUO_ASSEMBLY_VERSION }} -p:FileVersion=${{ env.CUO_ASSEMBLY_VERSION }}
      
    - name: Create manifest
      run: |
        dotnet run --project tools/ManifestCreator/ManifestCreator.csproj "${{ env.CUO_OUTPUT_PATH }}" "dev-preview" "${{ env.CUO_ZIP_NAME }}"
        mkdir upload
        mv manifest.xml upload
      
    - name: Create package
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        directory: ${{ env.CUO_OUTPUT_PATH }}
        filename: ${{ env.CUO_ZIP_NAME }}
        exclusions: '*.zip manifest.xml'
            
    - name: Move output
      run: mv "${{ env.CUO_OUTPUT_PATH }}/${{ env.CUO_ZIP_NAME }}" upload
              
    - name: Remove old Release
      uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: true
        tag_name: ClassicUO-dev-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "upload/${{ env.CUO_ZIP_NAME }}"
        name: 'ClassicUO dev preview'
        body: 'This build may not be safe: use it at your own risk.'
        prerelease: true
        tag: ClassicUO-dev-release
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: FTP Deploy
      uses: SamKirkland/FTP-Deploy-Action@4.3.2
      with:
        server: ftp.classicuo.eu
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PSW }}
        protocol: ftps
        server-dir: /www.classicuo.eu/dev/deploy/
        local-dir: upload/
        
