<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Btn_CombatSpells" xml:space="preserve">
    <value>Combat-Spells</value>
  </data>
  <data name="Btn_Containers" xml:space="preserve">
    <value>Containers</value>
  </data>
  <data name="Btn_Counters" xml:space="preserve">
    <value>Counters</value>
  </data>
  <data name="Btn_Experimental" xml:space="preserve">
    <value>Experimental</value>
  </data>
  <data name="Btn_Fonts" xml:space="preserve">
    <value>Fonts</value>
  </data>
  <data name="Btn_General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Btn_InfoBar" xml:space="preserve">
    <value>Info Bar</value>
  </data>
  <data name="Btn_Macros" xml:space="preserve">
    <value>Macros</value>
  </data>
  <data name="Btn_Sound" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="Btn_Speech" xml:space="preserve">
    <value>Speech</value>
  </data>
  <data name="Btn_Tooltip" xml:space="preserve">
    <value>Tooltip</value>
  </data>
  <data name="Btn_Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="Chk_AltCloseGumps" xml:space="preserve">
    <value>Hold ALT key + right click to close Anchored gumps</value>
  </data>
  <data name="Chk_AltMoveGumps" xml:space="preserve">
    <value>Hold ALT key to move gumps</value>
  </data>
  <data name="Chk_AlwaysRun" xml:space="preserve">
    <value>Always run</value>
  </data>
  <data name="Chk_AlwaysRunHidden" xml:space="preserve">
    <value>Unless hidden</value>
  </data>
  <data name="Chk_AutoOpenCorpses" xml:space="preserve">
    <value>Auto Open Corpses</value>
  </data>
  <data name="Chk_AutoOpenDoors" xml:space="preserve">
    <value>Auto Open Doors</value>
  </data>
  <data name="Chk_CircleTransType_Full" xml:space="preserve">
    <value>Full</value>
  </data>
  <data name="Chk_CircleTransType_Gradient" xml:space="preserve">
    <value>Gradient</value>
  </data>
  <data name="Chk_ClickCloseAllGumps" xml:space="preserve">
    <value>Close all Anchored gumps when right click on a group</value>
  </data>
  <data name="Chk_CorpseOpt_Both" xml:space="preserve">
    <value>Both</value>
  </data>
  <data name="Chk_CorpseOpt_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Chk_CorpseOpt_NotHid" xml:space="preserve">
    <value>Not Hiding</value>
  </data>
  <data name="Chk_CorpseOpt_NotTar" xml:space="preserve">
    <value>Not Targeting</value>
  </data>
  <data name="Chk_DisableMenu" xml:space="preserve">
    <value>Disable the Menu Bar</value>
  </data>
  <data name="Chk_DragHumanoidsOnly" xml:space="preserve">
    <value>Select humanoids only</value>
  </data>
  <data name="Chk_EnableCircleTrans" xml:space="preserve">
    <value>Enable circle of transparency</value>
  </data>
  <data name="Chk_EnableDragHPBars" xml:space="preserve">
    <value>Enable drag-select to open health bars</value>
  </data>
  <data name="Chk_EnablePathfinding" xml:space="preserve">
    <value>Enable pathfinding</value>
  </data>
  <data name="Chk_FPSInactive" xml:space="preserve">
    <value>Reduce FPS when game is inactive</value>
  </data>
  <data name="Chk_GridLoot_Both" xml:space="preserve">
    <value>Both</value>
  </data>
  <data name="Chk_GridLoot_GridOnly" xml:space="preserve">
    <value>Grid loot only</value>
  </data>
  <data name="Chk_GridLoot_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Chk_HideRoofTiles" xml:space="preserve">
    <value>Hide roof tiles</value>
  </data>
  <data name="Chk_HideVegetation" xml:space="preserve">
    <value>Hide vegetation</value>
  </data>
  <data name="Chk_HighlighState" xml:space="preserve">
    <value>Highlight by state (poisoned, yellow hits, paralyzed)</value>
  </data>
  <data name="Chk_HighlightObjects" xml:space="preserve">
    <value>Highlight game objects</value>
  </data>
  <data name="Chk_HPFields_Normal" xml:space="preserve">
    <value>Normal fields</value>
  </data>
  <data name="Chk_HPFields_Static" xml:space="preserve">
    <value>Static fields</value>
  </data>
  <data name="Chk_HPFields_Tile" xml:space="preserve">
    <value>Tile fields</value>
  </data>
  <data name="Chk_HPShow_Always" xml:space="preserve">
    <value>Always</value>
  </data>
  <data name="Chk_HPShow_Less" xml:space="preserve">
    <value>Less than 100 %</value>
  </data>
  <data name="Chk_HPShow_Smart" xml:space="preserve">
    <value>Smart</value>
  </data>
  <data name="Chk_HPType_MobileDead" xml:space="preserve">
    <value>Mobile is dead</value>
  </data>
  <data name="Chk_HPType_MobileOOR" xml:space="preserve">
    <value>Mobile out of range</value>
  </data>
  <data name="Chk_HPType_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Chk_HP_Both" xml:space="preserve">
    <value>Both</value>
  </data>
  <data name="Chk_HP_Line" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="Chk_HP_Percentage" xml:space="preserve">
    <value>Percentage</value>
  </data>
  <data name="Chk_InvulColor" xml:space="preserve">
    <value>Invulnerable Color</value>
  </data>
  <data name="Chk_KeyMod_Ctrl" xml:space="preserve">
    <value>Ctrl</value>
  </data>
  <data name="Chk_KeyMod_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Chk_KeyMod_Shift" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="Chk_MarkCaveTiles" xml:space="preserve">
    <value>Mark cave tiles</value>
  </data>
  <data name="Chk_ObjAlphaFading" xml:space="preserve">
    <value>Objects alpha fading</value>
  </data>
  <data name="Chk_OutOfRangeColor" xml:space="preserve">
    <value>No color for object out of range</value>
  </data>
  <data name="Chk_ParalyzedColor" xml:space="preserve">
    <value>Paralyzed Color</value>
  </data>
  <data name="Chk_PoisonedColor" xml:space="preserve">
    <value>Poisoned Color</value>
  </data>
  <data name="Chk_SallosEasyGrab" xml:space="preserve">
    <value>Sallos easy grab</value>
  </data>
  <data name="Chk_SaveHPBarsOnLogout" xml:space="preserve">
    <value>Save healthbars on logout</value>
  </data>
  <data name="Chk_ShiftContext" xml:space="preserve">
    <value>Hold Shift for Context Menus</value>
  </data>
  <data name="Chk_ShiftPathfinding" xml:space="preserve">
    <value>Use SHIFT for pathfinding</value>
  </data>
  <data name="Chk_ShiftStack" xml:space="preserve">
    <value>Hold Shift to split stack of items</value>
  </data>
  <data name="Chk_ShowGumpPartyInv" xml:space="preserve">
    <value>Show gump for party invites</value>
  </data>
  <data name="Chk_ShowHousesContent" xml:space="preserve">
    <value>Show houses content</value>
  </data>
  <data name="Chk_ShowHP" xml:space="preserve">
    <value>Show HP</value>
  </data>
  <data name="Chk_ShowIncCorpses" xml:space="preserve">
    <value>Show incoming new corpses</value>
  </data>
  <data name="Chk_ShowIncMobiles" xml:space="preserve">
    <value>Show incoming new mobiles</value>
  </data>
  <data name="Chk_ShowTarRangeIndic" xml:space="preserve">
    <value>Show target range indicator</value>
  </data>
  <data name="Chk_SkipEmptyCorpses" xml:space="preserve">
    <value>Skip empty corpses</value>
  </data>
  <data name="Chk_SmoothBoat" xml:space="preserve">
    <value>Smooth boat movements</value>
  </data>
  <data name="Chk_SmoothDoors" xml:space="preserve">
    <value>Smooth doors</value>
  </data>
  <data name="Chk_StandardSkillGump" xml:space="preserve">
    <value>Use standard skills gump</value>
  </data>
  <data name="Chk_TabCombat" xml:space="preserve">
    <value>Hold TAB key for combat</value>
  </data>
  <data name="Chk_TextAlphaFading" xml:space="preserve">
    <value>Text alpha fading</value>
  </data>
  <data name="Chk_TreesStumps" xml:space="preserve">
    <value>Trees to stumps</value>
  </data>
  <data name="Chk_UseBlackBackgr" xml:space="preserve">
    <value>Use All Black Backgrounds</value>
  </data>
  <data name="Chk_UseCustomHPBars" xml:space="preserve">
    <value>Use Custom Health Bars</value>
  </data>
  <data name="Lb_CircleTransType" xml:space="preserve">
    <value>Transparency type:</value>
  </data>
  <data name="Lb_CloseHPGumpWhen" xml:space="preserve">
    <value>Close healthbar gump when:</value>
  </data>
  <data name="Lb_CorpseOpenOptions" xml:space="preserve">
    <value>Corpse Open Options:</value>
  </data>
  <data name="Lb_CorpseOpenRange" xml:space="preserve">
    <value>Corpse Open Range:</value>
  </data>
  <data name="Lb_DragKey" xml:space="preserve">
    <value>Drag-select modifier key</value>
  </data>
  <data name="Lb_FPS" xml:space="preserve">
    <value>- FPS:</value>
  </data>
  <data name="Lb_GridLoot" xml:space="preserve">
    <value>Grid loot</value>
  </data>
  <data name="Lb_HPFields" xml:space="preserve">
    <value>Fields: </value>
  </data>
  <data name="Lb_HP_Mode" xml:space="preserve">
    <value>mode:</value>
  </data>
  <data name="Lb_ShopGumpSize" xml:space="preserve">
    <value>Shop Gump Size (multiple of 60):</value>
  </data>
</root>